{"ast":null,"code":"var _jsxFileName = \"/Users/joshworley/code/joshua-worley-next/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport ImageCard from '../components/ImageCard';\nimport { Box } from 'rebass';\nimport '../style/style.scss';\n\nconst Index = props => __jsx(Layout, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, __jsx(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, \"Joshua Worley\"), __jsx(\"h2\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, \"Digital Producer. Leader. SEO Marker. Bilingual. Photographer. Videographer. UI/UX Designer and Frontend Engineer with a passion for experience creation.\"), __jsx(Box, {\n  sx: {\n    display: 'grid',\n    gridGap: 4,\n    // theme.space[3]\n    gridTemplateColumns: 'repeat(auto-fit, minmax(240px, 1fr))'\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, props.shows.map(show => __jsx(Link, {\n  href: \"/p/[id]\",\n  as: `/p/${show.id}`,\n  key: show.id,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}, __jsx(ImageCard, {\n  key: show.name,\n  image: show.image.medium,\n  name: show.name,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n})))), __jsx(\"ul\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n}));\n\nIndex.getInitialProps = async function () {\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n  const data = await res.json();\n  console.log(`Show data fetched. Count: ${data.length}`);\n  return {\n    shows: data.map(entry => entry.show)\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/joshworley/code/joshua-worley-next/pages/index.js"],"names":["Layout","Link","fetch","ImageCard","Box","Index","props","display","gridGap","gridTemplateColumns","shows","map","show","id","name","image","medium","getInitialProps","res","data","json","console","log","length","entry"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,GAAT,QAAoB,QAApB;AACA,OAAO,qBAAP;;AAGA,MAAMC,KAAK,GAAGC,KAAK,IAEjB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+JAFF,EAGE,MAAC,GAAD;AACE,EAAA,EAAE,EAAE;AACFC,IAAAA,OAAO,EAAE,MADP;AAEFC,IAAAA,OAAO,EAAE,CAFP;AAEc;AAChBC,IAAAA,mBAAmB,EAAE;AAHnB,GADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAQGH,KAAK,CAACI,KAAN,CAAYC,GAAZ,CAAgBC,IAAI,IACnB,MAAC,IAAD;AAAM,EAAA,IAAI,EAAC,SAAX;AAAqB,EAAA,EAAE,EAAG,MAAKA,IAAI,CAACC,EAAG,EAAvC;AAA0C,EAAA,GAAG,EAAED,IAAI,CAACC,EAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,SAAD;AACE,EAAA,GAAG,EAAED,IAAI,CAACE,IADZ;AAEE,EAAA,KAAK,EAAEF,IAAI,CAACG,KAAL,CAAWC,MAFpB;AAGE,EAAA,IAAI,EAAEJ,IAAI,CAACE,IAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADD,CARH,CAHF,EAsBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAtBF,CAFF;;AA+BAT,KAAK,CAACY,eAAN,GAAwB,kBAAkB;AACxC,QAAMC,GAAG,GAAG,MAAMhB,KAAK,CAAC,8CAAD,CAAvB;AACA,QAAMiB,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAa,6BAA4BH,IAAI,CAACI,MAAO,EAArD;AAEA,SAAO;AACLb,IAAAA,KAAK,EAAES,IAAI,CAACR,GAAL,CAASa,KAAK,IAAIA,KAAK,CAACZ,IAAxB;AADF,GAAP;AAGD,CATD;;AAWA,eAAeP,KAAf","sourcesContent":["import Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport ImageCard from '../components/ImageCard'\nimport { Box } from 'rebass'\nimport '../style/style.scss'\n\n\nconst Index = props => (\n\n  <Layout>\n    <h1>Joshua Worley</h1>\n    <h2>Digital Producer. Leader. SEO Marker. Bilingual. Photographer. Videographer. UI/UX Designer and Frontend Engineer with a passion for experience creation.</h2>\n    <Box\n      sx={{\n        display: 'grid',\n        gridGap: 4,     // theme.space[3]\n        gridTemplateColumns: 'repeat(auto-fit, minmax(240px, 1fr))',\n      }}\n    >\n\n      {props.shows.map(show => (\n        <Link href=\"/p/[id]\" as={`/p/${show.id}`} key={show.id}>\n          <ImageCard\n            key={show.name}\n            image={show.image.medium}\n            name={show.name}\n          />\n        </Link>\n      ))}\n    </Box>\n\n    <ul>\n\n    </ul>\n  </Layout>\n\n);\n\nIndex.getInitialProps = async function () {\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n  const data = await res.json();\n\n  console.log(`Show data fetched. Count: ${data.length}`);\n\n  return {\n    shows: data.map(entry => entry.show)\n  };\n};\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}