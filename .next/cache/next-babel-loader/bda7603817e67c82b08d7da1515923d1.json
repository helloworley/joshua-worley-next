{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/joshworley/code/joshua-worley-next/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport ImageCard from '../components/ImageCard';\nimport { Box } from 'rebass';\n\nvar Index = function Index(props) {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"Batman TV Shows\"), __jsx(Box, {\n    sx: {\n      display: 'grid',\n      gridGap: 4,\n      // theme.space[3]\n      gridTemplateColumns: 'repeat(auto-fit, minmax(240px, 1fr))'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, props.shows.map(function (show) {\n    return (// <Link href=\"/p/[id]\" as={`/p/${show.id}`}>\n      __jsx(ImageCard, {\n        key: show.name,\n        image: show.image.medium,\n        name: show.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }) // </Link>\n\n    );\n  })), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }));\n};\n\nIndex.getInitialProps =\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee() {\n  var res, data;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch('https://api.tvmaze.com/search/shows?q=batman');\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return res.json();\n\n        case 5:\n          data = _context.sent;\n          console.log(\"Show data fetched. Count: \".concat(data.length));\n          return _context.abrupt(\"return\", {\n            shows: data.map(function (entry) {\n              return entry.show;\n            })\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Index;","map":{"version":3,"sources":["/Users/joshworley/code/joshua-worley-next/pages/index.js"],"names":["Layout","Link","fetch","ImageCard","Box","Index","props","display","gridGap","gridTemplateColumns","shows","map","show","name","image","medium","getInitialProps","res","json","data","console","log","length","entry"],"mappings":";;;;;AAAA,OAAOA,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,GAAT,QAAoB,QAApB;;AAGA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK;AAAA,SAEjB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAGE,MAAC,GAAD;AACE,IAAA,EAAE,EAAE;AACFC,MAAAA,OAAO,EAAE,MADP;AAEFC,MAAAA,OAAO,EAAE,CAFP;AAEc;AAChBC,MAAAA,mBAAmB,EAAE;AAHnB,KADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGH,KAAK,CAACI,KAAN,CAAYC,GAAZ,CAAgB,UAAAC,IAAI;AAAA,WACnB;AACE,YAAC,SAAD;AACE,QAAA,GAAG,EAAEA,IAAI,CAACC,IADZ;AAEE,QAAA,KAAK,EAAED,IAAI,CAACE,KAAL,CAAWC,MAFpB;AAGE,QAAA,IAAI,EAAEH,IAAI,CAACC,IAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFiB,CAOnB;;AAPmB;AAAA,GAApB,CARH,CAHF,EAsBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBF,CAFiB;AAAA,CAAnB;;AA+BAR,KAAK,CAACW,eAAN;AAAA;AAAA;AAAA;AAAA,yBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACJd,KAAK,CAAC,8CAAD,CADD;;AAAA;AAChBe,UAAAA,GADgB;AAAA;AAAA,iBAEHA,GAAG,CAACC,IAAJ,EAFG;;AAAA;AAEhBC,UAAAA,IAFgB;AAItBC,UAAAA,OAAO,CAACC,GAAR,qCAAyCF,IAAI,CAACG,MAA9C;AAJsB,2CAMf;AACLZ,YAAAA,KAAK,EAAES,IAAI,CAACR,GAAL,CAAS,UAAAY,KAAK;AAAA,qBAAIA,KAAK,CAACX,IAAV;AAAA,aAAd;AADF,WANe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AAWA,eAAeP,KAAf","sourcesContent":["import Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport ImageCard from '../components/ImageCard'\nimport { Box } from 'rebass'\n\n\nconst Index = props => (\n\n  <Layout>\n    <h1>Batman TV Shows</h1>\n\n    <Box\n      sx={{\n        display: 'grid',\n        gridGap: 4,     // theme.space[3]\n        gridTemplateColumns: 'repeat(auto-fit, minmax(240px, 1fr))',\n      }}\n    >\n\n      {props.shows.map(show => (\n        // <Link href=\"/p/[id]\" as={`/p/${show.id}`}>\n          <ImageCard\n            key={show.name}\n            image={show.image.medium}\n            name={show.name}\n          />\n        // </Link>\n      ))}\n    </Box>\n\n    <ul>\n\n    </ul>\n  </Layout>\n\n);\n\nIndex.getInitialProps = async function () {\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n  const data = await res.json();\n\n  console.log(`Show data fetched. Count: ${data.length}`);\n\n  return {\n    shows: data.map(entry => entry.show)\n  };\n};\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}